syntax = "proto3";

package admin;
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
option go_package="/.;";

// 定义一个Admin服务
service Admin {
  // 注册接口
  rpc Registration(RegistrationReq) returns (RegistrationRsp){
    option (google.api.http) = {
      get: "/register",
    };

  };
  // 登录接口
  rpc Login(LoginReq) returns (LoginRsp){
    option(google.api.http)={
      get:"/login",
    };
  }
  // 登出接口
  rpc Logout(LogoutReq) returns (LogoutRsp){
    option(google.api.http)={
      get:"/logout"
    };
  }
  // 注销接口
  rpc Logoff(LogoffReq) returns (LogoffRsp){
    option(google.api.http)={
      get:"/logoff"
    };
  }
  // 在线列表信息
  rpc GetUserList(UserListReq) returns (UserListRsp){
    option(google.api.http)={
      get:"/getUserList"
    };
  }
  // 拉黑/加白
  rpc AddAndRemoveBlackList(AddAndRemoveBlackListReq) returns(AddAndRemoveBlackListRsp){
    option(google.api.http)={
      get:"/addAndRemoveBlackList"
    };
  }
  // 发送消息
  rpc SendMessage(SendMessageReq)returns(SendMessageRsp){
    option(google.api.http)={
      get: "/sendMessage",
    };
  }
  // 获得消息
  rpc GetMessage(GetMessageReq)returns(GetMessageRsp){
    option (google.api.http)= {
      get: "/getMessage",
    };
  }
}

// RegistrationReq 注册请求
message RegistrationReq {
  string name  = 1;
  string passwd = 2;
  string avatar = 3;
}

// RegistrationRsp 注册响应
message RegistrationRsp{
}
// LoginReq 登录请求
message LoginReq {
  string name = 1;
  string password = 2;
}
// LoginRsp 登录响应
message LoginRsp{

}
// LogoutReq 登出请求
message LogoutReq{
  string name = 1;
}
// LogoutResp 登出响应
message LogoutRsp{}

// OnlineUserListReq 在线列表信息请求
message UserListReq{
}
// OnlineUserListResp 在线列表信息响应
message UserListRsp{
  repeated string name_type = 1;
}

message AddAndRemoveBlackListReq{
  int32 OwnerId = 1;
  int32 TargetId = 2;
  int32 Type  = 3;
}
message AddAndRemoveBlackListRsp{
}

message SendMessageReq{
  int64 userId = 1;
  int64 roomId = 2;
  bool  isSendAll = 3;
  string toUserIds = 4;
  string content = 5;
}
message SendMessageRsp{
}
// LogoutReq 登出请求
message LogoffReq{
  string name = 1;
}
// LogoutResp 登出响应
message LogoffRsp{}

// GetMessageReq  获取消息请求
message GetMessageReq{
//  用于请求是群发消息 还是 私聊消息
  int64 type  = 1 ;

//  如果是群发的 用于看是哪个群聊的消息
  int64  roomId = 2;

//  如果是私发的 用于看是哪个用户发的消息
  int64  TargetId = 3;
}
message GetMessageRsp{
//  返回 发送的消息内容
  repeated string content = 1;
//  返回 发送消息的时间
  repeated string time = 2;
//  返回 消息发送的对象
//  对于群发消息来讲 , 这里的 TargetId = userId
//  但是对于私发消息来说 , 这里的 TargetId = targetid
  repeated string TargetId = 3;
}